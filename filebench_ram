#!/bin/bash

export DISK=/dev/ram0
FSL3=( "Bento-fs" "ext4-journal" )
FSET=(  "seq_read_1t_128k.f" "seq_write_1t_128k.f" "rand_read_1t_128k.f" "rand_write_1t_128k.f" )
TSET=( 18 1 )
REPS=10

sudo sh -c 'echo 0 > /proc/sys/kernel/randomize_va_space'

cd filebenches
mkdir -p $RESULTS

reinit() {
	cd ..
	./umount

	sudo rmmod brd
	sudo modprobe brd rd_nr=1 rd_size=500000000

	if [ $FS == "Bento-fs" ] || [ $FS == "Bento-user" ]; then
		./bento_init
	elif [ $FS == "Bento-prov" ]; then
		./bento-prov_init
	fi
	./prepare_disk
	./mount
	cd filebenches
}


for FS in "${FSL3[@]}"; do
	export FS=$FS
	export MNT=/mnt/$FS
	RESULTS=../results/ram/$FS/filebench
	for f in "${FSET[@]}"; do
		# These workloads are wobly with Bento, so

		sed -i -e "s#set \$dir=.*#set \$dir=$MNT#g" $f
		echo "Running $f"
		mkdir -p $RESULTS/$f

		for T in "${TSET[@]}"; do
			sed -i -e "s#set \$nthreads=.*#set \$nthreads=$T#g" $f

			WREPS=$REPS
			# These are bugged :(
			if [[ ( $FS == "Bento-fs" || $FS == "Bento-prov" ) && ( $f == seq_write_1t_* ) ]]; then
				WREPS=1
			fi
			for i in $(seq 1 $WREPS); do
				echo "i=$i, T=$T"

				reinit

				sudo filebench -f $f > $RESULTS/$f/$T\_$i
				sudo rm -rf $MNT/*
			done
		done
	done
done

